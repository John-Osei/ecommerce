"""
Django settings for ecomprj project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$i0a%0900r^)dx*@i$@bn4xntuyh-x!lgp#12!z+$-$!4_bvy#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'jazzmin',

    'admin_notification',


    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'userauths',
    'mptt',

    'django.contrib.humanize',

    # 'admin_honeypot',

    'crispy_forms',
    'captcha',
    'tinymce',
    'django.contrib.sites',

    
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',

    'taggit',
    'ckeditor',
    'bootstrap_datepicker_plus',
    'bootstrap4',
    
    #Paypal integration
    'paypal.standard.ipn',

    #paystack
    'payments',
    'rest_framework',
    'rest_framework.authtoken',
    'paystack',
    'newsletter',


]

# USE_THOUSAND_SEPARATOR = True
 
LOGIN_URL = "userauths:sign-in"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecomprj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'core.context_processor.default',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecomprj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

if 'RDS_DB_NAME' in os.environ:
    DATABASES = {
        'default':{
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ['RDS_DB_NAME'],
            'USER': os.environ['RDS_USERNAME'],
            'PASSWORD': os.environ['RDS_PASSWORD'],
            'HOST': os.environ['RDS_HOSTNAME'],
            'PORT': os.environ['RDS_PORT'],
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }



# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]




# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR,"media")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

JAZZMIN_SETTINGS = {
    'site_header':"Adepa",
    'site_brand':"Adepa.Com",
    'copyright':"Adepa Inc",
    'search_model': ["auth.User", "auth.Group"],
    "topmenu_links": [
    # Url that gets reversed (Permissions can be added)
    {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
    # external url that opens in a new window (Permissions can be added)
    {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},
    # model admin to link to (Permissions checked against model)
    {"model": "auth.User"},
    # App with dropdown menu to all its models pages (Permissions checked against models)
    {"app": "core"},
    {"app": "userauths"},
    {"app": "account"},
    ],
}


SITE_ID = 1
SOCIALACCOUNT_LOGIN_ON_GET = True

AUTHENTICATION_BACKENDS = [
    'userauths.backends.EmailBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
    ]


SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}



AUTH_USER_MODEL = 'userauths.User'


CKEDITOR_UPLOAD_PATH = 'uploads/'

CKEDITOR_CONFIGS = {
    'default':{
        'skin':'moono',
        'codeSnippet_theme':'monakai',
        'toolbar': 'all',
        'extraPlugins':', '.join(
             [
                'codesnippet',
                'widget',
                'dialog',
             ]
        ),
    
    }
}
#Paystack
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": "rest_framework.schemas.coreapi.AutoSchema"
}


PAYPAL_RECEIVER_EMAIL = 'marketadepa@gmail.com'
PAYPAL_TEST = True

PAYSTACK_SECRET_KEY = os.environ.get('PAYSTACK_SECRET_KEY')
PAYSTACK_PUBLIC_KEY = os.environ.get('PAYSTACK_PUBLIC_KEY')


PAYSTACK_PUBLIC_KEY="pk_test_1aac1856cc6e58e9caceeaffcfe7526d0d5f4e3f"
PAYSTACK_PRIVATE_KEY="sk_test_50269fb8ed7f535b2dafcdd3159f3d00915885bc"

CRISPY_TEMPLATE_PACK = 'bootstrap4'




NOTIFICATION_MODEL = 'core.CartOrder' # Select the model you want to control, for example: "accounts.Message"

ADMIN_SITE_BASE_URL = 'admin_site_base_url/' # default is "admin/

RECAPTCHA_DOMAIN = 'www.recaptcha.net'

RECAPTCHA_PUBLIC_KEY = '6Lee6NwlAAAAAA-F1Vb1gaj-5hdV8nkqrmlSO9qR'
RECAPTCHA_PRIVATE_KEY = '6Lee6NwlAAAAAKxsUIEKX3xp78EgkS9AcxDWAnX7'





SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']

# #Emailing settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'oseiagyemanjohn@gmail.com'
EMAIL_HOST_PASSWORD = 'dnmbheppcklkrsio'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

PASSWORD_RESET_TIMEOUT = 14400

TINYMCE_DEFAULT_CONFIG = {
    'custom_undo_redo_levels': 100,
    'selector': 'textarea',
    "menubar": "file edit view insert format tools table help",
    'plugins': 'link image preview codesample contextmenu table code lists fullscreen',
    'toolbar1': 'undo redo | backcolor casechange permanentpen formatpainter removeformat formatselect fontselect fontsizeselect',
    'toolbar2': 'bold italic underline blockquote | alignleft aligncenter alignright alignjustify '
               '| bullist numlist | outdent indent | table | link image | codesample | preview code | tiny_mce_wiris_formulaEditor tiny_mce_wiris_formulaEditorChemistry',
    'contextmenu': 'formats | link image',
    'block_formats': 'Paragraph=p; Header 1=h1; Header 2=h2',
    'fontsize_formats': "8pt 10pt 12pt 14pt 16pt 18pt",
    'content_style': "body { font-family: Arial; background: white; color: black; font-size: 12pt}",
    'codesample_languages': [
        {'text': 'Python', 'value': 'python'}, {'text': 'HTML/XML', 'value': 'markup'},],
    'image_class_list': [{'title': 'Fluid', 'value': 'img-fluid', 'style': {} }],
    'width': 'auto',
    "height": "600px",
    'image_caption': True,
}

